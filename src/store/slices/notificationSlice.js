import { createSlice } from '@reduxjs/toolkit';

export const notificationMessagesSlice = createSlice({
  name: 'notificationMessages',
  initialState: {
    messages: {
      success: [],
      warning: [], 
      error: [],  
    },
    pageMessage: {
      severity: "",
      message: "You Have Successfully Finished The Process. Kindly Close This Tab Or Click 'Done' To Go Back To The App.",
      additionalMessage: "", 
      tokenType: "",
      tokens: [],
      showDownloadImages: false
    }
  },
  reducers: {
    setMessage: (state, action) => {
      state.messages[action.payload.severity].push(action.payload)
    },
   
    clearMessage: (state, action) => {
      let messages = state.messages[action.payload.severity]
      messages.forEach((message, index) =>{ //
        if(message.key === action.payload.key){
          messages.splice(index, 1);
          state.messages[action.payload.severity] = messages;
        }
      })
    },
    setPageMessage: (state, action) => {
      state.pageMessage = action.payload
    },
    clearPageMessage: (state) => {
      state.pageMessage = {
        severity: "",
        message: "You Have Successfully Finished The Process. Kindly Close This Tab Or Click 'Done' To Go Back To The App",
        additionalMessage: "",
        tokenType: "",
        tokens: []
      }
    }
  },

});

// exporting actions auto generated by redux-toolkit
export const { setMessage, clearMessage, setPageMessage, clearPageMessage } = notificationMessagesSlice.actions;

export default notificationMessagesSlice.reducer
